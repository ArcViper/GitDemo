Microsoft Windows [Version 10.0.19045.3693]
(c) Microsoft Corporation. All rights reserved.

U:\>cd c:/

U:\>c:/
'c:/' is not recognized as an internal or external command,
operable program or batch file.

U:\> dir c:/
Invalid switch - "".

U:\>dir c:
 Volume in drive C is OS
 Volume Serial Number is 9E19-7860

 Directory of c:\

07/07/2022  11:50 AM    <DIR>          Apps
07/07/2022  01:01 PM    <DIR>          DELL
07/07/2022  12:37 PM    <DIR>          Drivers
07/07/2022  12:35 PM    <DIR>          e-logo
01/30/2023  09:52 AM    <DIR>          Intel
12/03/2023  03:08 PM    <DIR>          kworking
12/07/2019  04:14 AM    <DIR>          PerfLogs
12/04/2023  12:21 PM    <DIR>          Program Files
11/03/2023  02:19 PM    <DIR>          Program Files (x86)
08/01/2023  10:09 AM             5,828 SSDXFlashLog.zip
10/01/2023  07:37 AM    <DIR>          temp
11/11/2022  01:33 PM    <DIR>          Users
11/29/2023  01:40 PM    <DIR>          Windows
               1 File(s)          5,828 bytes
              12 Dir(s)  806,465,257,472 bytes free

U:\>c:

c:\>git config --global user.name "Michael"

c:\>git config --global user.email "mbaxter@epictechllc.com"

c:\>cd Github_Stuff
The system cannot find the path specified.

c:\>cd C:\Users\mbaxter\Github_Stuff

C:\Users\mbaxter\Github_Stuff>git init
Initialized empty Git repository in C:/Users/mbaxter/Github_Stuff/.git/

C:\Users\mbaxter\Github_Stuff>git add *
warning: in the working copy of '.idea/inspectionProfiles/Project_Default.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of '.idea/inspectionProfiles/profiles_settings.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'tests/geckodriver.log', LF will be replaced by CRLF the next time Git touches it

C:\Users\mbaxter\Github_Stuff>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   .idea/.gitignore
        new file:   .idea/PythonSelfFramework.iml
        new file:   .idea/encodings.xml
        new file:   .idea/inspectionProfiles/Project_Default.xml
        new file:   .idea/inspectionProfiles/profiles_settings.xml
        new file:   .idea/misc.xml
        new file:   .idea/modules.xml
        new file:   TestData/HomePageData.py
        new file:   TestData/__init__.py
        new file:   TestData/__pycache__/HomePageData.cpython-310.pyc
        new file:   TestData/__pycache__/HomePageData.cpython-311.pyc
        new file:   TestData/__pycache__/__init__.cpython-310.pyc
        new file:   TestData/__pycache__/__init__.cpython-311.pyc
        new file:   pageObjects/CheckoutPage.py
        new file:   pageObjects/ConfirmPage.py
        new file:   pageObjects/HomePage.py
        new file:   pageObjects/__init__.py
        new file:   pageObjects/__pycache__/CheckoutPage.cpython-310.pyc
        new file:   pageObjects/__pycache__/CheckoutPage.cpython-311.pyc
        new file:   pageObjects/__pycache__/ConfirmPage.cpython-310.pyc
        new file:   pageObjects/__pycache__/ConfirmPage.cpython-311.pyc
        new file:   pageObjects/__pycache__/HomePage.cpython-310.pyc
        new file:   pageObjects/__pycache__/HomePage.cpython-311.pyc
        new file:   pageObjects/__pycache__/__init__.cpython-310.pyc
        new file:   pageObjects/__pycache__/__init__.cpython-311.pyc
        new file:   tests/__init__.py
        new file:   tests/__pycache__/__init__.cpython-310.pyc
        new file:   tests/__pycache__/__init__.cpython-311.pyc
        new file:   tests/__pycache__/conftest.cpython-310-pytest-7.4.0.pyc
        new file:   tests/__pycache__/conftest.cpython-311-pytest-7.3.1.pyc
        new file:   tests/__pycache__/conftest.cpython-311-pytest-7.4.0.pyc
        new file:   tests/__pycache__/conftest.cpython-311-pytest-7.4.2.pyc
        new file:   tests/__pycache__/test.cpython-311-pytest-7.3.1.pyc
        new file:   tests/__pycache__/test2.cpython-310-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test2.cpython-311-pytest-7.3.1.pyc
        new file:   tests/__pycache__/test2.cpython-311-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test_HomePage.cpython-310-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test_HomePage.cpython-311-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test_HomePage.cpython-311-pytest-7.4.2.pyc
        new file:   tests/__pycache__/test_end2end.cpython-310-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test_end2end.cpython-311-pytest-7.3.1.pyc
        new file:   tests/__pycache__/test_end2end.cpython-311-pytest-7.4.0.pyc
        new file:   tests/__pycache__/test_end2end.cpython-311-pytest-7.4.2.pyc
        new file:   tests/__pycache__/test_test2.cpython-311-pytest-7.3.1.pyc
        new file:   tests/assets/style.css
        new file:   tests/conftest.py
        new file:   tests/geckodriver.log
        new file:   tests/report.html
        new file:   tests/test_HomePage.py
        new file:   tests/test_HomePage.py_TestHomePage_test_formSubmission[getData0].png
        new file:   tests/test_HomePage.py_TestHomePage_test_formSubmission[getData1].png
        new file:   tests/test_end2end.py
        new file:   utilities/BaseClass.py
        new file:   utilities/__init__.py
        new file:   utilities/__pycache__/BaseClass.cpython-310.pyc
        new file:   utilities/__pycache__/BaseClass.cpython-311.pyc
        new file:   utilities/__pycache__/__init__.cpython-310.pyc
        new file:   utilities/__pycache__/__init__.cpython-311.pyc
        new file:   utilities/logfile.log


C:\Users\mbaxter\Github_Stuff>git commit -m "first Commit"
[master (root-commit) ed8a9fc] first Commit
 59 files changed, 952 insertions(+)
 create mode 100644 .idea/.gitignore
 create mode 100644 .idea/PythonSelfFramework.iml
 create mode 100644 .idea/encodings.xml
 create mode 100644 .idea/inspectionProfiles/Project_Default.xml
 create mode 100644 .idea/inspectionProfiles/profiles_settings.xml
 create mode 100644 .idea/misc.xml
 create mode 100644 .idea/modules.xml
 create mode 100644 TestData/HomePageData.py
 create mode 100644 TestData/__init__.py
 create mode 100644 TestData/__pycache__/HomePageData.cpython-310.pyc
 create mode 100644 TestData/__pycache__/HomePageData.cpython-311.pyc
 create mode 100644 TestData/__pycache__/__init__.cpython-310.pyc
 create mode 100644 TestData/__pycache__/__init__.cpython-311.pyc
 create mode 100644 pageObjects/CheckoutPage.py
 create mode 100644 pageObjects/ConfirmPage.py
 create mode 100644 pageObjects/HomePage.py
 create mode 100644 pageObjects/__init__.py
 create mode 100644 pageObjects/__pycache__/CheckoutPage.cpython-310.pyc
 create mode 100644 pageObjects/__pycache__/CheckoutPage.cpython-311.pyc
 create mode 100644 pageObjects/__pycache__/ConfirmPage.cpython-310.pyc
 create mode 100644 pageObjects/__pycache__/ConfirmPage.cpython-311.pyc
 create mode 100644 pageObjects/__pycache__/HomePage.cpython-310.pyc
 create mode 100644 pageObjects/__pycache__/HomePage.cpython-311.pyc
 create mode 100644 pageObjects/__pycache__/__init__.cpython-310.pyc
 create mode 100644 pageObjects/__pycache__/__init__.cpython-311.pyc
 create mode 100644 tests/__init__.py
 create mode 100644 tests/__pycache__/__init__.cpython-310.pyc
 create mode 100644 tests/__pycache__/__init__.cpython-311.pyc
 create mode 100644 tests/__pycache__/conftest.cpython-310-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/conftest.cpython-311-pytest-7.3.1.pyc
 create mode 100644 tests/__pycache__/conftest.cpython-311-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/conftest.cpython-311-pytest-7.4.2.pyc
 create mode 100644 tests/__pycache__/test.cpython-311-pytest-7.3.1.pyc
 create mode 100644 tests/__pycache__/test2.cpython-310-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test2.cpython-311-pytest-7.3.1.pyc
 create mode 100644 tests/__pycache__/test2.cpython-311-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test_HomePage.cpython-310-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test_HomePage.cpython-311-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test_HomePage.cpython-311-pytest-7.4.2.pyc
 create mode 100644 tests/__pycache__/test_end2end.cpython-310-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test_end2end.cpython-311-pytest-7.3.1.pyc
 create mode 100644 tests/__pycache__/test_end2end.cpython-311-pytest-7.4.0.pyc
 create mode 100644 tests/__pycache__/test_end2end.cpython-311-pytest-7.4.2.pyc
 create mode 100644 tests/__pycache__/test_test2.cpython-311-pytest-7.3.1.pyc
 create mode 100644 tests/assets/style.css
 create mode 100644 tests/conftest.py
 create mode 100644 tests/geckodriver.log
 create mode 100644 tests/report.html
 create mode 100644 tests/test_HomePage.py
 create mode 100644 tests/test_HomePage.py_TestHomePage_test_formSubmission[getData0].png
 create mode 100644 tests/test_HomePage.py_TestHomePage_test_formSubmission[getData1].png
 create mode 100644 tests/test_end2end.py
 create mode 100644 utilities/BaseClass.py
 create mode 100644 utilities/__init__.py
 create mode 100644 utilities/__pycache__/BaseClass.cpython-310.pyc
 create mode 100644 utilities/__pycache__/BaseClass.cpython-311.pyc
 create mode 100644 utilities/__pycache__/__init__.cpython-310.pyc
 create mode 100644 utilities/__pycache__/__init__.cpython-311.pyc
 create mode 100644 utilities/logfile.log

C:\Users\mbaxter\Github_Stuff>get branch -trunk
'get' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\mbaxter\Github_Stuff>git branch -M trunk

C:\Users\mbaxter\Github_Stuff>git remote add origin https://github.com/ArcViper/GitDemo.git

C:\Users\mbaxter\Github_Stuff>git push -u origin trunk
info: please complete authentication in your browser...
Enumerating objects: 70, done.
Counting objects: 100% (70/70), done.
Delta compression using up to 12 threads
Compressing objects: 100% (66/66), done.
Writing objects: 100% (70/70), 175.02 KiB | 12.50 MiB/s, done.
Total 70 (delta 11), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (11/11), done.
To https://github.com/ArcViper/GitDemo.git
 * [new branch]      trunk -> trunk
branch 'trunk' set up to track 'origin/trunk'.

C:\Users\mbaxter\Github_Stuff>git clone https://github.com/ArcViper/GitDemo.git
Cloning into 'GitDemo'...
remote: Enumerating objects: 70, done.
remote: Counting objects: 100% (70/70), done.
remote: Compressing objects: 100% (55/55), done.
Receiving objects:  90% (63/70)used 70 (delta 11), pack-reused 0
Receiving objects: 100% (70/70), 175.02 KiB | 14.58 MiB/s, done.
Resolving deltas: 100% (11/11), done.

C:\Users\mbaxter\Github_Stuff>cd C:\Users\mbaxter\GitDemo

C:\Users\mbaxter\GitDemo>git add *

C:\Users\mbaxter\GitDemo>git status
On branch trunk
Your branch is up to date with 'origin/trunk'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .idea/vcs.xml
        modified:   tests/test_end2end.py


C:\Users\mbaxter\GitDemo>git commit -m "this is a commit from Y"
[trunk 1fce76f] this is a commit from Y
 2 files changed, 7 insertions(+)
 create mode 100644 .idea/vcs.xml

C:\Users\mbaxter\GitDemo>git push origin trunk
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 12 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 703 bytes | 703.00 KiB/s, done.
Total 6 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
To https://github.com/ArcViper/GitDemo.git
   ed8a9fc..1fce76f  trunk -> trunk

C:\Users\mbaxter\GitDemo>cd C:\Users\mbaxter\Github_Stuff

C:\Users\mbaxter\Github_Stuff>git pull origin trunk
remote: Enumerating objects: 10, done.
remote: Counting objects: 100% (10/10), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 6 (delta 3), reused 6 (delta 3), pack-reused 0
Unpacking objects: 100% (6/6), 683 bytes | 26.00 KiB/s, done.
From https://github.com/ArcViper/GitDemo
 * branch            trunk      -> FETCH_HEAD
   ed8a9fc..1fce76f  trunk      -> origin/trunk
error: The following untracked working tree files would be overwritten by merge:
        .idea/vcs.xml
Please move or remove them before you merge.
Aborting
Updating ed8a9fc..1fce76f

C:\Users\mbaxter\Github_Stuff>git pull origin trunk
From https://github.com/ArcViper/GitDemo
 * branch            trunk      -> FETCH_HEAD
Updating ed8a9fc..1fce76f
Fast-forward
 .idea/vcs.xml         | 6 ++++++
 tests/test_end2end.py | 1 +
 2 files changed, 7 insertions(+)
 create mode 100644 .idea/vcs.xml

C:\Users\mbaxter\Github_Stuff>git status
On branch trunk
Your branch is up to date with 'origin/trunk'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        GitHubCommands.txt

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\mbaxter\Github_Stuff>git add GitHubCommands.txt

C:\Users\mbaxter\Github_Stuff>git commit -m "X added command prompt text file"
[trunk 87a1381] X added command prompt text file
 1 file changed, 245 insertions(+)
 create mode 100644 GitHubCommands.txt

C:\Users\mbaxter\Github_Stuff>git push trunk
fatal: 'trunk' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

C:\Users\mbaxter\Github_Stuff>git push origin trunk
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 2.43 KiB | 2.43 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/ArcViper/GitDemo.git
   1fce76f..87a1381  trunk -> trunk

C:\Users\mbaxter\Github_Stuff>git add GitHubCommands.txt

C:\Users\mbaxter\Github_Stuff>git status
On branch trunk
Your branch is up to date with 'origin/trunk'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   GitHubCommands.txt


C:\Users\mbaxter\Github_Stuff>git push origin trunk
Everything up-to-date

C:\Users\mbaxter\Github_Stuff>git commit -"X modified text file with more lines"
error: unknown switch `X'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --[no-]quiet      suppress summary after successful commit
    -v, --[no-]verbose    show diff in commit message template

Commit message options
    -F, --[no-]file <file>
                          read message from file
    --[no-]author <author>
                          override author for commit
    --[no-]date <date>    override date for commit
    -m, --[no-]message <message>
                          commit message
    -c, --[no-]reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --[no-]reuse-message <commit>
                          reuse message from specified commit
    --[no-]fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --[no-]squash <commit>
                          use autosquash formatted message to squash specified commit
    --[no-]reset-author   the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --[no-]signoff    add a Signed-off-by trailer
    -t, --[no-]template <file>
                          use specified template file
    -e, --[no-]edit       force edit of commit
    --[no-]cleanup <mode> how to strip spaces and #comments from message
    --[no-]status         include status in commit message template
    -S, --[no-]gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --[no-]all        commit all changed files
    -i, --[no-]include    add specified files to index for commit
    --[no-]interactive    interactively add files
    -p, --[no-]patch      interactively add changes
    -o, --[no-]only       commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --verify              opposite of --no-verify
    --[no-]dry-run        show what would be committed
    --[no-]short          show status concisely
    --[no-]branch         show branch information
    --[no-]ahead-behind   compute full ahead/behind values
    --[no-]porcelain      machine-readable output
    --[no-]long           show status in long format (default)
    -z, --[no-]null       terminate entries with NUL
    --[no-]amend          amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    --post-rewrite        opposite of --no-post-rewrite
    -u, --[no-]untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --[no-]pathspec-from-file <file>
                          read pathspec from file
    --[no-]pathspec-file-nul
                          with --pathspec-from-file, pathspec elements are separated with NUL character


C:\Users\mbaxter\Github_Stuff>git commit -M "X modified text file with more lines"
error: unknown switch `M'
usage: git commit [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]
                  [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]
                  [-F <file> | -m <msg>] [--reset-author] [--allow-empty]
                  [--allow-empty-message] [--no-verify] [-e] [--author=<author>]
                  [--date=<date>] [--cleanup=<mode>] [--[no-]status]
                  [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]
                  [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]
                  [--] [<pathspec>...]

    -q, --[no-]quiet      suppress summary after successful commit
    -v, --[no-]verbose    show diff in commit message template

Commit message options
    -F, --[no-]file <file>
                          read message from file
    --[no-]author <author>
                          override author for commit
    --[no-]date <date>    override date for commit
    -m, --[no-]message <message>
                          commit message
    -c, --[no-]reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --[no-]reuse-message <commit>
                          reuse message from specified commit
    --[no-]fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --[no-]squash <commit>
                          use autosquash formatted message to squash specified commit
    --[no-]reset-author   the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --[no-]signoff    add a Signed-off-by trailer
    -t, --[no-]template <file>
                          use specified template file
    -e, --[no-]edit       force edit of commit
    --[no-]cleanup <mode> how to strip spaces and #comments from message
    --[no-]status         include status in commit message template
    -S, --[no-]gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --[no-]all        commit all changed files
    -i, --[no-]include    add specified files to index for commit
    --[no-]interactive    interactively add files
    -p, --[no-]patch      interactively add changes
    -o, --[no-]only       commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --verify              opposite of --no-verify
    --[no-]dry-run        show what would be committed
    --[no-]short          show status concisely
    --[no-]branch         show branch information
    --[no-]ahead-behind   compute full ahead/behind values
    --[no-]porcelain      machine-readable output
    --[no-]long           show status in long format (default)
    -z, --[no-]null       terminate entries with NUL
    --[no-]amend          amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    --post-rewrite        opposite of --no-post-rewrite
    -u, --[no-]untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --[no-]pathspec-from-file <file>
                          read pathspec from file
    --[no-]pathspec-file-nul
                          with --pathspec-from-file, pathspec elements are separated with NUL character


C:\Users\mbaxter\Github_Stuff>git commit -m "X modified text file with more lines"
[trunk 5deb8ff] X modified text file with more lines
 1 file changed, 45 insertions(+), 1 deletion(-)

C:\Users\mbaxter\Github_Stuff>git push origin trunk
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 897 bytes | 897.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/ArcViper/GitDemo.git
   87a1381..5deb8ff  trunk -> trunk

C:\Users\mbaxter\Github_Stuff>cd C:\Users\mbaxter\GitDemo

C:\Users\mbaxter\GitDemo>git checkout -b developer
Switched to a new branch 'developer'

C:\Users\mbaxter\GitDemo>git branch
* developer
  trunk

C:\Users\mbaxter\GitDemo>test